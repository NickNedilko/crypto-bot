import TelegramBot from 'node-telegram-bot-api';
import { generateSummary } from './gptCommenter.js';
import  predictWithML  from './mlPredictor.js';
import Parser from 'rss-parser';
import Sentiment from 'sentiment';
import dotenv from 'dotenv';

dotenv.config();


const rssParser = new Parser();
const sentiment = new Sentiment();


const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

// /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const welcome = `üëã –ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!

–Ø ‚Äî –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–∞.
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/news ‚Äî –Ω–æ–≤–æ—Å—Ç–∏ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
/ml <coin> ‚Äî –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ ML (–Ω–∞–ø—Ä–∏–º–µ—Ä, /ml bitcoin)`;
  bot.sendMessage(chatId, welcome);
});

// /news ‚Äî –Ω–æ–≤–æ—Å—Ç–∏ —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏ GPT-–æ—Ç–≤–µ—Ç–æ–º
bot.onText(/\/news/, async (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'üì° –°–æ–±–∏—Ä–∞—é —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ CoinDesk...');

  try {
    const feed = await rssParser.parseURL('https://www.coindesk.com/arc/outboundfeeds/rss/?outputType=xml');
    const topNews = feed.items.slice(0, 5);
    let response = 'üì∞ *–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π CoinDesk:*\n\n';

    for (const item of topNews) {
      const text = item.title + '. ' + item.contentSnippet;
      const sentimentResult = sentiment.analyze(text);
      const score = sentimentResult.score;

      let emoji = 'üü°';
      if (score > 2) emoji = 'üü¢';
      else if (score < -2) emoji = 'üî¥';

      const gptComment = await generateSummary(text);
      response += `${emoji} [${item.title}](${item.link})\nüß† ${gptComment}\n\n`;
    }

    bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
    bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.');
  }
});

// /ml <coin> ‚Äî ML –ø—Ä–æ–≥–Ω–æ–∑
bot.onText(/\/ml (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const coin = match[1].toLowerCase();

  bot.sendMessage(chatId, `ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é ${coin} —Å –ø–æ–º–æ—â—å—é ML...`);
  const result = await predictWithML(coin);
  bot.sendMessage(chatId, result);
});